#+TITLE: ML Internship 2022
#+SUBTITLE: Department for Cognition, Emotion & Research Methods \\
#+SUBTITLE: [[https://www.github.com/dominikpegler/internship_ml][code repo]]
#+AUTHOR: Dominik PEGLER
#+EMAIL: dominikpegler@posteo.org
# +SETUPFILE: setupfile_article_fls_en.org
#+FILETAGS: ml
#+CATEGORY: machine-learning
#+LANGUAGE: en
#+STARTUP: overview indent
#+OPTIONS: ^:nil toc:nil email:nil num:nil todo:t email:t tags:t broken-links:mark p:t html-style:nil
# +INFOJS_OPT: view:overview toc:nil mouse:#efefef buttons:t sdepth:nil
#+EXPORT_FILE_NAME: ~/Dropbox/org/internship_ml/docs/index.html
#+html: <center>
#+ATTR_HTML: :width 75px
file:./img/mlicon2.png
#+html: </center>
#+TOC: headlines 2


# kann im weiteren verlauf ins berichtformat transformiert werden.
# Praktikum März und April 2022
# 8 Wochen je 30h = 240h

* Tasks

** TODO Create a standard ML Script
DEADLINE: <2022-03-15 Tue>
   :LOGBOOK:
   CLOCK: [2022-03-11 Fri 09:45]--[2022-03-11 Fri 12:10] =>  2:25
   CLOCK: [2022-03-09 Wed 19:02]--[2022-03-09 Wed 21:13] =>  2:11
   CLOCK: [2022-03-09 Wed 17:15]--[2022-03-09 Wed 18:15] =>  1:00
   CLOCK: [2022-03-09 Wed 13:00]--[2022-03-09 Wed 15:15] =>  2:15
   CLOCK: [2022-03-08 Tue 19:55]--[2022-03-08 Tue 23:00] =>  3:05
   CLOCK: [2022-03-07 Mon 16:15]--[2022-03-07 Mon 19:19] =>  3:04
   CLOCK: [2022-03-06 Sun 22:15]--[2022-03-06 Sun 23:19] =>  1:04
   CLOCK: [2022-03-06 Sun 17:15]--[2022-03-06 Sun 18:05] =>  0:50
   CLOCK: [2022-03-05 Sat 11:00]--[2022-03-05 Sat 13:03] =>  2:03
   CLOCK: [2022-03-04 Fri 23:00]--[2022-03-05 Sat 00:30] =>  1:30
   CLOCK: [2022-03-04 Fri 14:00]--[2022-03-04 Fri 15:30] =>  1:30
   CLOCK: [2022-03-03 Thu 23:00]--[2022-03-04 Fri 00:25] =>  1:25
   CLOCK: [2022-03-03 Thu 11:45]--[2022-03-03 Thu 14:56] =>  3:11
   CLOCK: [2022-03-02 Wed 21:00]--[2022-03-02 Wed 23:55] =>  2:55
   CLOCK: [2022-03-02 Wed 12:20]--[2022-03-02 Wed 15:20] =>  3:00
   CLOCK: [2022-03-01 Tue 22:30]--[2022-03-01 Tue 23:50] =>  1:20
   CLOCK: [2022-03-01 Tue 19:35]--[2022-03-01 Tue 20:44] =>  1:09
   CLOCK: [2022-02-28 Mon 19:45]--[2022-02-28 Mon 23:43] =>  3:58
   :END:

Predicting problematic alcohol consumpion by trait
mindfulness (FFMQ), impulsiveness (UPPS-P), drinking-to-cope motives
(DMQ-R-Cope), sex and weekly working hours.

#+begin_src python -n :eval never-export :session *py* :exports both :results output :dir /home/user/data/psy_misc/internship_ml
from sklearn.model_selection import GroupShuffleSplit
from skopt import BayesSearchCV 
from sklearn.linear_model import ElasticNet
from get_data import get_mindfulness as get_data
from utils import split_train_test
import time


def main():

    start = time.time()
    
    X, y = get_data()
    
    hyperparams_dist = {
        "alpha": (1e-4,1e3,"log-uniform"),
        "l1_ratio": (1e-3,1.0,"uniform")
    }
    
    reg = ElasticNet()
    
    outer_cv = GroupShuffleSplit(
        n_splits=5,
        test_size=0.2,
        random_state=0)
    
    # iterate over outer CV splitter
    for i_cv, (i_train, i_test) in enumerate(outer_cv.split(X, y, groups=X.index), start=1):
    
        y_train, y_test = split_train_test(y, i_train, i_test)
        X_train, X_test = split_train_test(X, i_train, i_test)
    
        # nested CV with parameter optimization
        search_reg = BayesSearchCV(
            estimator=reg,
            search_spaces=hyperparams_dist,
            n_iter=50,
            cv=5,
            n_jobs=8,
            random_state=0)
        result = search_reg.fit(X_train, y_train)
    
        print(f"Split {i_cv}:", result.best_estimator_)
        print("train score:", round(result.score(X_train, y_train), 5))
        print("test  score:", round(result.score(X_test, y_test), 5))
        print("\n")
    
    print(f"Execution time: {(time.time()-start):.3f}s")


if __name__ == "__main__":
    main()
#+end_src

   #+RESULTS:
   #+begin_example
   Split 1: ElasticNet(alpha=0.18719219516699595, l1_ratio=1.0)
   train score: 0.40553
   test  score: 0.36028


   Split 2: ElasticNet(alpha=0.47323207415464175, l1_ratio=0.4289707228514357)
   train score: 0.35507
   test  score: 0.33208


   Split 3: ElasticNet(alpha=0.21108453310560205, l1_ratio=1.0)
   train score: 0.39937
   test  score: 0.32944


   Split 4: ElasticNet(alpha=0.14144276806413866, l1_ratio=1.0)
   train score: 0.4173
   test  score: 0.38794


   Split 5: ElasticNet(alpha=0.18333780804975994, l1_ratio=1.0)
   train score: 0.43841
   test  score: 0.25232


   Execution time: 217.066s
   #+end_example

** TODO Writing the report
DEADLINE: <2022-04-30 Sat>

Here a brief overview of what was going on each week ...

*** Week 1
Intro, Data preprocessing & cross-validation, scikit-learn-documentation,
regularized linear models (Ridge, Lasso etc.)
*** Week 2
Literature, continuation script (implementing RandomSearchCV, BayesSearchCV), manually computing gradients
for simple OR- und XOR-networks
*** Weeks 3--8

* Meetings

** TODO 2. Meeting with Steyrl-Group via Skype
SCHEDULED: <2022-03-15 Tue 11:00>
** DONE 2. Meeting with David
CLOSED: [2022-03-08 Tue 22:05] SCHEDULED: <2022-03-08 Tue 10:00>
:LOGBOOK:
CLOCK: [2022-03-08 Tue 10:00]--[2022-03-08 Tue 10:50] =>  0:50
:END:
     1. Progress of standard script creation
     2. Discussing regressors and their hyperparameters
     
** DONE 1. Meeting with Steyrl-Group via Skype
    CLOSED: [2022-03-02 Wed 11:35] SCHEDULED: <2022-03-02 Wed 11:00>
    :LOGBOOK:
    CLOCK: [2022-03-02 Wed 11:00]--[2022-03-02 Wed 11:35] =>  0:35
    :END:
- Introducing group and master thesis topics

** DONE 1. Meeting with David via Zoom
    CLOSED: [2022-02-28 Mon 10:55] SCHEDULED: <2022-02-28 Mon 10:00>
    :LOGBOOK:
    CLOCK: [2022-02-28 Mon 10:00]--[2022-02-28 Mon 10:55] =>  0:55
    :END:

    1. Topic of internship
       1. Analyze my bachelor thesis data with ML methods
          (regularized linear models & random forests)
       2. Further topics and tasks we may discuss at a later stage
    2. General concepts about python libraries and workflow
    3. First goal: Creating a standard ML script that does the following
       1. Reads in the data,
       2. Splits data into X and y, into train and test sets,
       3. carries out cross validation (GroupShuffleSplit) 
	      1. Outer loop (to prevent overfitting)
	      2. Inner loop (for finding optimal hyperparameters)
    4. Agreed to meet next in two Tagen (together with the master thesis students)
   
* Reading
:LOGBOOK:
CLOCK: [2022-03-11 Fri 18:54]--[2022-03-11 Fri 21:54] =>  3:00
CLOCK: [2022-03-10 Thu 20:00]--[2022-03-10 Thu 22:30] =>  2:30
CLOCK: [2022-03-07 Mon 19:20]--[2022-03-07 Mon 23:55] =>  4:35
CLOCK: [2022-03-06 Sun 18:45]--[2022-03-06 Sun 20:10] =>  1:25
CLOCK: [2022-03-05 Sat 19:05]--[2022-03-05 Sat 22:35] =>  3:30
:END:

- Géron, A. (2019). Hands-On Machine Learning with Scikit-Learn, Keras,
  and TensorFlow, 2nd Edition. O'Reilly. https://www.oreilly.com/library/view/hands-on-machine-learning/9781492032632

- scikit-learn developers (2022). Scikit-learn User Guide. https://scikit-learn.org/stable/user_guide.html



* code                                                             :noexport:

#   #+begin_src elisp

# (custom-set-faces
#  '(org-block-begin-line
#    ((t (:underline "#A7A6AA" :foreground "#008ED1" :background "#EAEAFF" :extend t))))
#  '(org-block
#    ((t (:background "#EFF0F1" :extend t))))
#  '(org-block-end-line
#    ((t (:overline "#A7A6AA" :foreground "#008ED1" :background "#EAEAFF" :extend t))))
#  )


#   #+end_src

  #+RESULTS:
